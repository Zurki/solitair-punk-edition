server {
    listen 80;
    server_name REPLACE_WITH_YOUR_DOMAIN; # Replace with your actual domain
    
    # Redirect HTTP to HTTPS
    # Uncomment after you've set up SSL
    # return 301 https://$host$request_uri;
    
    location / {
        proxy_pass http://punk-solitair:4269;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS server
# Uncomment after you've set up SSL certificates
# server {
#     listen 443 ssl http2;
#     server_name REPLACE_WITH_YOUR_DOMAIN;
#     
#     ssl_certificate /etc/letsencrypt/live/REPLACE_WITH_YOUR_DOMAIN/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/REPLACE_WITH_YOUR_DOMAIN/privkey.pem;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # HSTS (optional, but recommended)
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     
#     # Proxy requests to Node.js application
#     location / {
#         proxy_pass http://punk-solitair:4269;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# } 